#include <LiquidCrystal.h>
#include <Keypad.h>
#include <Adafruit_NeoPixel.h>
#include <Servo.h>

/*
Pin-out of 16x2 LCD and connection with arduino (Left to right)
LCDpinno       Description       	     Arduino
   1            VSS		                  GND
   2	          VDD			                5v(Short with pin 15 of LCD)
   3	          VO			                No connection with arduino, but with output(middle pin) of 10k potentiometer
   4	          RS			                9
   5	          R/W			                GND	
   6	          EN			                8
 7,8,9,10     1st 4-bit data lines      No connection as we use the LCD in 4-bit data mode only
   11		       data_pin 4		            7
   12		       data_pin 5		            6
   13	         data_pin 6		            5
   14	         data_pin 7		            4 
   15		       VCC			                Connect to a 220 ohm resistor and the resistor to Arduino 5v pin
   16		       GND			                GND

Pin-out of 4x3 matrix keypad and connection with arduino

  Pin-no(Left to right)      Matrix-description        Arduino-pin
      1                             R1                 A0
      2                             R2                 A1
      3                             R3                 A2
      4                             R4                 A3
      5                             C1                 A4
      6                             C2                 A5
      7                             C3                digital pin  3

Pin-out of Neopixels WS2812B and connection with arduino

     Pin-description               Arduino
         GND                  Connect this terminal to negative of 5v power supply, and again this same terminal to Arduino Gnd pin.
         VCC                  Connect this terminal to positive of 5v power supply, and again this same terminal to Arduino VCC pin.
         INPUT                Connect this to a 330ohm resistor and the other end of the resistor to Digital pin 2 of arduino.

       Note: Please connect a 100uf capacitor between positive and negative terminal of the 5v power supply.


Pin-out of Servo motors 1 and 2 and connection with arduino

  Servo1_pins       Arduino
   VCC               5v
   GND               GND
   INPUT           digital pin 10
   
 Servo2_pins       Arduino
   VCC               5v
   GND               GND
   INPUT           digital pin 11

 Pin-out of ultrasonic LED and connection with arduino

    anoode - digital pin 12
    cathode - GND
*/
   		
//defining variable liquid_crystal_display of type LiquidCrystal with connection to pins as follows (RS,EN,data_pin4,data_pin5,data_pin6,data_pin7) 
LiquidCrystal liquid_crystal_display(9,8,7,6,5,4);

//system password is 1234. It will be used to change all the passwords i.e. stage1, stage2,stage3 and also system password itself.
char system_password[4] = {'1','2','3','4'};
char stage1_password[4] = {'1','1','1','1'};
char stage2_password[4] = {'2', '2', '2', '2'};
char stage3_password[4] = {'3', '3', '3', '3'};

//stores password temporarily during gameplay
char password[4];

//stores password temporarily during password change
char new_password[4];

//used as counter
int i=0;
int k=0;
int l=0;


int stage1_counter=0;
int stage2_counter=0;
int stage3_counter=0;


//Defining Keypad parameters same as done in keypad_test
char key_pressed=0;

const byte rows = 4; 
const byte columns = 3; 
char hexaKeys[rows][columns] = {
{'1','2','3'},
{'4','5','6'},
{'7','8','9'},
{'*','0','#'}
};
byte row_pins[rows] = {A0,A1,A2,A3};
byte column_pins[columns] = {A4,A5,3};   
Keypad keypad_key = Keypad( makeKeymap(hexaKeys), row_pins, column_pins, rows, columns);


#define WS2812B_LED_PIN 2

//If youre using 15 leds only, change this to 15
#define WS2812B_LED_COUNT 16

// defining variable of type Adafruit_NeoPixel with above parameters, 3rd argument is hardware specific.
Adafruit_NeoPixel strip(WS2812B_LED_COUNT, WS2812B_LED_PIN, NEO_GRB + NEO_KHZ800);

//Creating an object of class Servo1 i.e. stage2 servo.
Servo servo1;

//Creating an object of class Servo1 i.e. stage3 servo.
Servo servo2;


//These are the values for initial postion,final position and time to wait before retracing the path for servo1. You need to
// set these values according to the mechanism's constraints. Test the code with different values to decide the values which
//work for you. Use the servo_testing code for testing.

int servo1_initial_pos = 10;
int servo1_final_pos = 180;
//int servo1_time = 200;

int servo2_initial_pos = 10;
int servo2_final_pos = 180;
int servo2_time = 500;

#define uv_led 12


void setup()

{
  Serial.begin(9600);
  
  //initializing the 16x2 lcd
  liquid_crystal_display.begin(16,2);

  //initializing the WS2812B leds
  strip.begin();
  strip.show();

//Initializing the servos with pin no and initial position
  servo1.attach(10);
  servo1.write(servo1_initial_pos);
  
  servo2.attach(11);
  servo2.write(servo2_initial_pos);
  
  pinMode(uv_led,OUTPUT);
  
  // We print the welocme message. It is to remember that there are only 16 characters in one line available, so calculate
  // the printed text accordingly and if need to write more, go to next line using set cursor command and then use print statement again.
  liquid_crystal_display.print("Welcome to the ");
  liquid_crystal_display.setCursor(0,1);
  liquid_crystal_display.print("password game!");
  delay(200);
  
  //These are instruction messages which are printed on LCD many times throughout the game, You will see ahead. The instruction
  //are explained in detail in start of the code. Please read it before going ahead.
  instructions();
}

void loop()

{
//Now we check if any key is presses or not and store that value in key_pressed varibale, same as done in keypad_test.
stage1_check:
key_pressed = keypad_key.getKey();

//if key_pressed is not empty, this if becomes true which means a particular key is pressed.
 if(key_pressed)
  {
   
   //If pressed key is '#', this loop becomes true
     if(key_pressed == '#')
      { 
        
        //This message indicated the password change procedure has began
        liquid_crystal_display.print("Starting change:");
        delay(100);
        liquid_crystal_display.clear();

        liquid_crystal_display.print("Press one of the");
        liquid_crystal_display.setCursor(0,1);
        liquid_crystal_display.print("following button");
        delay(100);
        liquid_crystal_display.clear();

        liquid_crystal_display.print("'0' to change");
        liquid_crystal_display.setCursor(0,1);
        liquid_crystal_display.print("system password");
        delay(150);
        liquid_crystal_display.clear();

        liquid_crystal_display.print("'1' to change");
        liquid_crystal_display.setCursor(0,1);
        liquid_crystal_display.print("stage1 password");
        delay(150);
        liquid_crystal_display.clear();

        liquid_crystal_display.print("'2' to change");
        liquid_crystal_display.setCursor(0,1);
        liquid_crystal_display.print("stage2 password");
        delay(150);
        liquid_crystal_display.clear();

        liquid_crystal_display.print("'3' to change");
        liquid_crystal_display.setCursor(0,1);
        liquid_crystal_display.print("stage3 password");
        delay(150);
        liquid_crystal_display.clear();
        
        again:
           char key = keypad_key.getKey();
           if(key)
           {
             change(key);
             
           }
            
            else
            {
              goto again;
            }
        
     }
       
      else
      {   
        
	        //this message indicated we are now playing the game and entering the stage1 password
          liquid_crystal_display.setCursor(0,0);
          liquid_crystal_display.print("stage1 password:");
          liquid_crystal_display.setCursor(i,1);
          
          //storing each presses key in the password character array
          password[i++]= key_pressed;
          //Serial.println(key_pressed);
          //displaying each pressed key
          liquid_crystal_display.print(key_pressed);

//if value of i becomse 4 which means 4 digit password is entered, we enter this loop
          if(i==4)
            {
              delay(200);
              
// Now we use the strncmp function to comapre elements of both the arrays, if both arrays are equal, it returns 
// 0 which is why we used the '!' negate operator.
              if(!(strncmp(password, stage1_password,4)))
                { 
                   i=0;
                   liquid_crystal_display.clear();
                   liquid_crystal_display.print("Pass Accepted!");
                   delay(200);
                   liquid_crystal_display.clear();
                   liquid_crystal_display.print("Its stage2!");
                   delay(200);
                   liquid_crystal_display.clear();
                   for(int angle = servo1_initial_pos; angle<servo1_final_pos; angle++)  
                               {                                  
                                       servo1.write(angle);               
                                       delay(10);                   
                               } 
                   glow(stage2_password);
                   for(int angle = servo1_final_pos; angle>servo1_initial_pos; angle--)    
                               {                                
                                      servo1.write(angle);           
                                      delay(10);       
                               }
                
                   liquid_crystal_display.clear();
                   liquid_crystal_display.print("enter stage2");
                   liquid_crystal_display.setCursor(0,1);
                   liquid_crystal_display.print("password");
                   delay(300);
                   liquid_crystal_display.clear();
                   char key;
                   stage2_check:
                   while(k<4)
                  {   
                      key = keypad_key.getKey();
                      if(key)
                       { 
                          liquid_crystal_display.setCursor(0,0);
                          liquid_crystal_display.print("stage2 password:");
                          liquid_crystal_display.setCursor(k,1);
                          password[k++]= key;
                          liquid_crystal_display.print(key);
                       }
                   }
                     key = 0;
                     delay(200);
                     if(!(strncmp(password, stage2_password,4)))
                         
                    	    {  
                                  liquid_crystal_display.clear();
                      		      liquid_crystal_display.print("Pass Accepted!");
                                  delay(200);
                                  k =0;
                                  liquid_crystal_display.clear();
                                  liquid_crystal_display.print("Its stage3!");
                                  delay(200);
                                  liquid_crystal_display.clear();
                                  for(int angle = servo2_initial_pos; angle<servo2_final_pos; angle++)  
                                    {                                  
                                       servo2.write(angle);               
                                       delay(10);                   
                                    }
                       
                                    digitalWrite(uv_led,HIGH);
                                    delay(servo2_time);
                       
                                   for(int angle = servo2_final_pos; angle>servo2_initial_pos; angle--)    
                                     {                                
                                      servo2.write(angle);           
                                      delay(10);       
                                     }
                                   liquid_crystal_display.clear();
                                   liquid_crystal_display.print("enter stage3");
                                   liquid_crystal_display.setCursor(0,1);
                                   liquid_crystal_display.print("password");
                                   delay(300);
                                   liquid_crystal_display.clear();
                                   char key_1;
                                   stage3_check:
                                   while(l<4)
                                    {   
                                   key_1 = keypad_key.getKey();
                                   if(key_1)
                                       { 
                                          liquid_crystal_display.setCursor(0,0);
                                          liquid_crystal_display.print("stage3 password:");
                                          liquid_crystal_display.setCursor(l,1);
                                          password[l++]= key_1;
                                          liquid_crystal_display.print(key_1);
                                        }
                                    }
                                          
                                          key_1 = 0;
                                          delay(200);
                                    
                                    if(!(strncmp(password, stage3_password,4)))
                         
                    	        {  
                                  liquid_crystal_display.clear();
                      		      liquid_crystal_display.print("Pass Accepted!");
                                  delay(200);
                                  k =0;
                                  liquid_crystal_display.clear();
                                  liquid_crystal_display.print("Congratulations!");
                                  liquid_crystal_display.setCursor(0,1);
                                  liquid_crystal_display.print("You did it!");
                                  delay(200);
                                
                                 }
                                 
                                
                       
                               else
                             {
                                if(stage3_counter == 2)
                                 { 
                                   liquid_crystal_display.clear();
                                   liquid_crystal_display.print("Thats 3 wrongs!");
                                   liquid_crystal_display.setCursor(0,1);
                                   liquid_crystal_display.print("Its game over");
                                   delay(300);
                                   l= 0;
                                   liquid_crystal_display.clear();
                                   stage3_counter = 0;
                                   instructions();
                                  }
                            else
                             {
                                liquid_crystal_display.clear();
                          	liquid_crystal_display.print("Wrong 3 Password");
                   		liquid_crystal_display.setCursor(0,1);
                   		liquid_crystal_display.print("Please try again");
                   	        delay(100);
                               l=0;
                               stage3_counter += 1;
                               liquid_crystal_display.clear();
                               liquid_crystal_display.print("enter stage3");
                               liquid_crystal_display.setCursor(0,1);
                               liquid_crystal_display.print("password again");
                               delay(300);
                               liquid_crystal_display.clear();
                               goto stage3_check;
                             }
                                  
                                  
                                
                                }
                              }
                       
                       
                       else
                      {
                          if(stage2_counter == 2)
                            { 
                                liquid_crystal_display.clear();
                                liquid_crystal_display.print("Thats 3 wrongs!");
                                liquid_crystal_display.setCursor(0,1);
                                liquid_crystal_display.print("Its game over");
                                delay(300);
                                k=0;
                                liquid_crystal_display.clear();
                                stage2_counter = 0;
                                instructions();
                            }
                           else
                  			{
                   				liquid_crystal_display.clear();
                   				liquid_crystal_display.print("Wrong 2 Password");
                   				liquid_crystal_display.setCursor(0,1);
                   				liquid_crystal_display.print("Please try again");
                   				delay(100);
                   				k=0;
                   				stage2_counter += 1;
                   				liquid_crystal_display.clear();
                   				liquid_crystal_display.print("enter stage2");
                   				liquid_crystal_display.setCursor(0,1);
                   				liquid_crystal_display.print("password again");
                   				delay(300);
                                liquid_crystal_display.clear();
                                goto stage2_check;
                              }
                              
                               
                           }
                     
                        
                
                        }
            
            
            
  
     //If the stage1 password is wrong, this loop is excecuted                 
            else
                 {
                 
                   if(stage1_counter == 2)
                   { 
                     liquid_crystal_display.clear();
                     liquid_crystal_display.print("Thats 3 wrongs!");
                     liquid_crystal_display.setCursor(0,1);
                     liquid_crystal_display.print("Its game over");
                     delay(300);
                     i = 0;
                     liquid_crystal_display.clear();
                     stage1_counter = 0;
                     instructions();
                   }
                   else
                  {
                   liquid_crystal_display.clear();
                   liquid_crystal_display.print("Wrong 1 Password");
                   liquid_crystal_display.setCursor(0,1);
                   liquid_crystal_display.print("Please try again");
                   delay(100);
                   i=0;
                   stage1_counter += 1;
                   liquid_crystal_display.clear();
                   liquid_crystal_display.print("enter stage1");
                   liquid_crystal_display.setCursor(0,1);
                   liquid_crystal_display.print("password again");
                   delay(300);
                   liquid_crystal_display.clear();
                   goto stage1_check;
                  }
                 }
            }
        }
     }  
 }

//defining how password is changed
void change(char presses_key)
 {

  if(presses_key == '0')
  {
   int j=0;
   liquid_crystal_display.clear();  
   liquid_crystal_display.print("System password:");
   liquid_crystal_display.setCursor(j,1);
   
   while(j<4)

     {
//again taking input from keypad
        char key=keypad_key.getKey();
        
        if(key)
        
          {

             new_password[j++]=key;
             liquid_crystal_display.print(key);
          }
         
       key=0;

      }

    delay(500);
    
    if((strncmp(new_password, system_password, 4)))
      {
         liquid_crystal_display.clear();
         liquid_crystal_display.print("Wrong Password");
         liquid_crystal_display.setCursor(0,1);
         liquid_crystal_display.print("Try Again");
         delay(200);
         instructions();
         
      }

   else

     {
     
        j=0;
        liquid_crystal_display.clear();
        liquid_crystal_display.print("Password right!");
        delay(200);
        liquid_crystal_display.clear();
        liquid_crystal_display.print("New sys Pass:");
        liquid_crystal_display.setCursor(0,1);

        while(j<4)
      
         {

            char key=keypad_key.getKey();

            if(key)
            
              {

                 system_password[j]=key;
                 liquid_crystal_display.print(key);
                 j++;
        
               }
          
             key = 0;

          }
         
         liquid_crystal_display.clear();
         liquid_crystal_display.print("Sys pass is now:");
         for(int k=0; k<4; k++)
         {
           liquid_crystal_display.setCursor(k,1);
           liquid_crystal_display.print(system_password[k]);
           //Serial.println(system_password[k]); 
         }
         
         delay(500);
         instructions();
      }  
    }

    else if(presses_key == '1')
    {

      int j=0;
   liquid_crystal_display.clear();  
   liquid_crystal_display.print("System password:");
   liquid_crystal_display.setCursor(j,1);
   
   while(j<4)

     {
//again taking input from keypad
        char key=keypad_key.getKey();
        
        if(key)
        
          {

             new_password[j++]=key;
             liquid_crystal_display.print(key);
          }
         
       key=0;

      }

    delay(200);
    
    if((strncmp(new_password, system_password, 4)))
      {
         liquid_crystal_display.clear();
         liquid_crystal_display.print("Wrong Pass");
         liquid_crystal_display.setCursor(0,1);
         liquid_crystal_display.print("Try Again");
         delay(200);
         instructions();
         
      }

   else

     {
     
        j=0;
        liquid_crystal_display.clear();
        liquid_crystal_display.print("Password right!");
        delay(200);
        liquid_crystal_display.clear();
        liquid_crystal_display.print("New stage1 Pass:");
        liquid_crystal_display.setCursor(0,1);

        while(j<4)
      
         {

            char key=keypad_key.getKey();

            if(key)
            
              {

                 stage1_password[j]=key;
                 liquid_crystal_display.print(key);
                 j++;
        
               }
          
             key = 0;

          }
         
         liquid_crystal_display.clear();
         liquid_crystal_display.print("stage1 pass:");
         for(int k=0; k<4; k++)
         {
           liquid_crystal_display.setCursor(k,1);
           liquid_crystal_display.print(stage1_password[k]);
           //Serial.println(stage1_password[k]); 
         }
         
         delay(500);
         instructions();
      }  
    }

    else if(presses_key == '2')
    {

      int j=0;
   liquid_crystal_display.clear();  
   liquid_crystal_display.print("System password:");
   liquid_crystal_display.setCursor(j,1);
   
   while(j<4)

     {
//again taking input from keypad
        char key=keypad_key.getKey();
        
        if(key)
        
          {

             new_password[j++]=key;
             liquid_crystal_display.print(key);
          }
         
       key=0;

      }

    delay(200);
    
    if((strncmp(new_password, system_password, 4)))
      {
         liquid_crystal_display.clear();
         liquid_crystal_display.print("Wrong Pass");
         liquid_crystal_display.setCursor(0,1);
         liquid_crystal_display.print("Try Again");
         delay(200);
         instructions();
         
      }

   else

     {
     
        j=0;
        liquid_crystal_display.clear();
        liquid_crystal_display.print("Password right!");
        delay(200);
        liquid_crystal_display.clear();
        liquid_crystal_display.print("new stage2 Pass:");
        liquid_crystal_display.setCursor(0,1);

        while(j<4)
      
         {

            char key=keypad_key.getKey();

            if(key)
            
              {

                 stage2_password[j]=key;
                 liquid_crystal_display.print(key);
                 j++;
        
               }
          
             key = 0;

          }
         
         liquid_crystal_display.clear();
         liquid_crystal_display.print("stage2 Pass:");
         for(int k=0; k<4; k++)
         {
           liquid_crystal_display.setCursor(k,1);
           liquid_crystal_display.print(stage2_password[k]);
           //Serial.println(stage2_password[k]); 
         }
         
         delay(500);
         instructions();
      }  

    }

    else if(presses_key == '3')
    {

      int j=0;
   liquid_crystal_display.clear();  
   liquid_crystal_display.print("system password:");
   liquid_crystal_display.setCursor(j,1);
   
   while(j<4)

     {
//again taking input from keypad
        char key=keypad_key.getKey();
        
        if(key)
        
          {

             new_password[j++]=key;
             liquid_crystal_display.print(key);
          }
         
       key=0;

      }

    delay(200);
    
    if((strncmp(new_password, system_password, 4)))
      {
         liquid_crystal_display.clear();
         liquid_crystal_display.print("Wrong Pass");
         liquid_crystal_display.setCursor(0,1);
         liquid_crystal_display.print("Try Again");
         delay(500);
         instructions();
         
      }

   else

     {
     
        j=0;
        liquid_crystal_display.clear();
        liquid_crystal_display.print("Password right!");
        delay(200);
        liquid_crystal_display.clear();
        liquid_crystal_display.print("new stage3 Pass:");
        liquid_crystal_display.setCursor(0,1);

        while(j<4)
      
         {

            char key=keypad_key.getKey();

            if(key)
            
              {

                 stage3_password[j]=key;
                 liquid_crystal_display.print(key);
                 j++;
        
               }
          
             key = 0;

          }
         
         liquid_crystal_display.clear();
         liquid_crystal_display.print("stage3 pass:");
         for(int k=0; k<4; k++)
         {
           liquid_crystal_display.setCursor(k,1);
           liquid_crystal_display.print(stage3_password[k]);
           //Serial.println(stage3_password[k]); 
         }
         
         delay(500);
         instructions();
      }  

    }
  }

void instructions()
{
  
  liquid_crystal_display.clear();
  liquid_crystal_display.print("Press '#' to ");
  liquid_crystal_display.setCursor(0,1);
  liquid_crystal_display.print("change password");
  delay(300);
  liquid_crystal_display.clear();
  liquid_crystal_display.print("or enter stage1");
  liquid_crystal_display.setCursor(0,1);
  liquid_crystal_display.print("password");
  delay(300);
  liquid_crystal_display.clear();
}

void glow(char code[])
{
   liquid_crystal_display.clear();
   liquid_crystal_display.print("Observe the LEDs");
   delay(100);
   liquid_crystal_display.clear();
   
   //this is done to convert the character values of password into integer values
   int a = code[0]-'0';
   int b = code[1]-'0';
   int c = code[2]-'0';
   int d = code[3]-'0';
  
  //defining colors
   uint32_t red = strip.Color(255, 0, 0);
   uint32_t green = strip.Color(0, 255, 0);
   uint32_t blue = strip.Color(0, 0, 255);
   uint32_t white = strip.Color(255, 255, 255);
   uint32_t clear = strip.Color(0, 0, 0);
  
   //then we use the strip.fill function to fill the leds with same color
   strip.clear();
   strip.show();
   strip.fill(red, 0, a);
   strip.show();
   delay(200);
   strip.clear();
   strip.show();
  
   strip.fill(green, 0, b);
   strip.show();
   delay(200);
   strip.clear();
   strip.show();
  
   strip.fill(blue, 0, c);
   strip.show();
   delay(200);
   strip.clear();
   strip.show();
  
   strip.fill(white, 0, d);
   strip.show();
   delay(200);
   strip.clear();
   strip.show();
   
 }
